RESTORING HDL CODE:
module restoring_division (
input wire [7:0] dividend,
input wire [7:0] divisor,
output wire [7:0] quotient,
output wire [7:0] remainder
);
reg [7:0] dividend_reg;
reg [7:0] divisor_reg;
reg [7:0] quotient_reg;
reg [7:0] remainder_reg;
reg [3:0] count;
always @(dividend or divisor) begin  
dividend_reg <= dividend;
divisor_reg <= divisor;
count <= 4'b0000;
quotient_reg <= 8'b00000000;
remainder_reg <= dividend_reg;
end
always @(posedge clk) begin
count <= 4'b0000;
quotient_reg <= 8'b00000000;
remainder_reg <= dividend_reg;
end
always @(posedge clk) begin
if (count < 4'b1000) begin
remainder_reg <= remainder_reg - divisor_reg;
count <= count + 1;
if (remainder_reg < 0) begin
remainder_reg <= remainder_reg + divisor_reg;
quotient_reg[count] <= 1'b0;
end else begin
quotient_reg[count] <= 1'b1;
end
end
end
assign quotient = quotient_reg;
assign remainder = remainder_reg;
endmodule
